{"ast":null,"code":"'use strict';\n\nvar _jsxFileName = \"/Users/kirylbeliauski/Documents/COMP SCI/software engineering/hw4/actual hw/music-rating-app-react-native/node_modules/react-native/Libraries/LogBox/UI/LogBoxNotification.js\";\nimport * as React from 'react';\nimport Image from \"../../Image/Image\";\nimport StyleSheet from \"../../StyleSheet/StyleSheet\";\nimport Text from \"../../Text/Text\";\nimport View from \"../../Components/View/View\";\nimport LogBoxButton from \"./LogBoxButton\";\nimport * as LogBoxStyle from \"./LogBoxStyle\";\nimport LogBoxLog from \"../Data/LogBoxLog\";\nimport LogBoxMessage from \"./LogBoxMessage\";\nimport * as LogBoxData from \"../Data/LogBoxData\";\n\nfunction LogBoxLogNotification(props) {\n  var totalLogCount = props.totalLogCount,\n      level = props.level,\n      log = props.log;\n  React.useEffect(function () {\n    LogBoxData.symbolicateLogLazy(log);\n  }, [log]);\n  return React.createElement(View, {\n    style: toastStyles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(LogBoxButton, {\n    onPress: props.onPressOpen,\n    style: toastStyles.press,\n    backgroundColor: {\n      default: LogBoxStyle.getBackgroundColor(1),\n      pressed: LogBoxStyle.getBackgroundColor(0.9)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: toastStyles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(CountBadge, {\n    count: totalLogCount,\n    level: level,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), React.createElement(Message, {\n    message: log.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), React.createElement(DismissButton, {\n    onPress: props.onPressDismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }))));\n}\n\nfunction CountBadge(props) {\n  return React.createElement(View, {\n    style: countStyles.outside,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: [countStyles.inside, countStyles[props.level]],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: countStyles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, props.count <= 1 ? '!' : props.count)));\n}\n\nfunction Message(props) {\n  return React.createElement(View, {\n    style: messageStyles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    numberOfLines: 1,\n    style: messageStyles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, props.message && React.createElement(LogBoxMessage, {\n    plaintext: true,\n    message: props.message,\n    style: messageStyles.substitutionText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  })));\n}\n\nfunction DismissButton(props) {\n  return React.createElement(View, {\n    style: dismissStyles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, React.createElement(LogBoxButton, {\n    backgroundColor: {\n      default: LogBoxStyle.getTextColor(0.3),\n      pressed: LogBoxStyle.getTextColor(0.5)\n    },\n    hitSlop: {\n      top: 12,\n      right: 10,\n      bottom: 12,\n      left: 10\n    },\n    onPress: props.onPress,\n    style: dismissStyles.press,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: require(\"./LogBoxImages/close.png\"),\n    style: dismissStyles.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar countStyles = StyleSheet.create({\n  warn: {\n    backgroundColor: LogBoxStyle.getWarningColor(1)\n  },\n  error: {\n    backgroundColor: LogBoxStyle.getErrorColor(1)\n  },\n  log: {\n    backgroundColor: LogBoxStyle.getLogColor(1)\n  },\n  outside: {\n    padding: 2,\n    borderRadius: 25,\n    backgroundColor: '#fff',\n    marginRight: 8\n  },\n  inside: {\n    minWidth: 18,\n    paddingLeft: 4,\n    paddingRight: 4,\n    borderRadius: 25,\n    fontWeight: '600'\n  },\n  text: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    lineHeight: 18,\n    textAlign: 'center',\n    fontWeight: '600',\n    textShadowColor: LogBoxStyle.getBackgroundColor(0.4),\n    textShadowOffset: {\n      width: 0,\n      height: 0\n    },\n    textShadowRadius: 3\n  }\n});\nvar messageStyles = StyleSheet.create({\n  container: {\n    alignSelf: 'stretch',\n    flexGrow: 1,\n    flexShrink: 1,\n    flexBasis: 'auto',\n    borderLeftColor: LogBoxStyle.getTextColor(0.2),\n    borderLeftWidth: 1,\n    paddingLeft: 8\n  },\n  text: {\n    color: LogBoxStyle.getTextColor(1),\n    flex: 1,\n    fontSize: 14,\n    lineHeight: 22\n  },\n  substitutionText: {\n    color: LogBoxStyle.getTextColor(0.6)\n  }\n});\nvar dismissStyles = StyleSheet.create({\n  container: {\n    alignSelf: 'center',\n    flexDirection: 'row',\n    flexGrow: 0,\n    flexShrink: 0,\n    flexBasis: 'auto',\n    marginLeft: 5\n  },\n  press: {\n    height: 20,\n    width: 20,\n    borderRadius: 25,\n    alignSelf: 'flex-end',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  image: {\n    height: 8,\n    width: 8,\n    tintColor: LogBoxStyle.getBackgroundColor(1)\n  }\n});\nvar toastStyles = StyleSheet.create({\n  container: {\n    height: 48,\n    position: 'relative',\n    width: '100%',\n    justifyContent: 'center',\n    marginTop: 0.5,\n    backgroundColor: LogBoxStyle.getTextColor(1)\n  },\n  press: {\n    height: 48,\n    position: 'relative',\n    width: '100%',\n    justifyContent: 'center',\n    marginTop: 0.5,\n    paddingHorizontal: 12\n  },\n  content: {\n    alignItems: 'flex-start',\n    flexDirection: 'row',\n    borderRadius: 8,\n    flexGrow: 0,\n    flexShrink: 0,\n    flexBasis: 'auto'\n  }\n});\nexport default LogBoxLogNotification;","map":{"version":3,"sources":["/Users/kirylbeliauski/Documents/COMP SCI/software engineering/hw4/actual hw/music-rating-app-react-native/node_modules/react-native/Libraries/LogBox/UI/LogBoxNotification.js"],"names":["React","Image","StyleSheet","Text","View","LogBoxButton","LogBoxStyle","LogBoxLog","LogBoxMessage","LogBoxData","LogBoxLogNotification","props","totalLogCount","level","log","useEffect","symbolicateLogLazy","toastStyles","container","onPressOpen","press","default","getBackgroundColor","pressed","content","message","onPressDismiss","CountBadge","countStyles","outside","inside","text","count","Message","messageStyles","substitutionText","DismissButton","dismissStyles","getTextColor","top","right","bottom","left","onPress","require","image","create","warn","backgroundColor","getWarningColor","error","getErrorColor","getLogColor","padding","borderRadius","marginRight","minWidth","paddingLeft","paddingRight","fontWeight","color","fontSize","lineHeight","textAlign","textShadowColor","textShadowOffset","width","height","textShadowRadius","alignSelf","flexGrow","flexShrink","flexBasis","borderLeftColor","borderLeftWidth","flex","flexDirection","marginLeft","alignItems","justifyContent","tintColor","position","marginTop","paddingHorizontal"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport * as React from 'react';\nimport Image from '../../Image/Image';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Text from '../../Text/Text';\nimport View from '../../Components/View/View';\nimport LogBoxButton from './LogBoxButton';\nimport * as LogBoxStyle from './LogBoxStyle';\nimport LogBoxLog from '../Data/LogBoxLog';\nimport LogBoxMessage from './LogBoxMessage';\nimport * as LogBoxData from '../Data/LogBoxData';\n\ntype Props = $ReadOnly<{|\n  log: LogBoxLog,\n  totalLogCount: number,\n  level: 'warn' | 'error',\n  onPressOpen: () => void,\n  onPressDismiss: () => void,\n|}>;\n\nfunction LogBoxLogNotification(props: Props): React.Node {\n  const {totalLogCount, level, log} = props;\n\n  // Eagerly symbolicate so the stack is available when pressing to inspect.\n  React.useEffect(() => {\n    LogBoxData.symbolicateLogLazy(log);\n  }, [log]);\n\n  return (\n    <View style={toastStyles.container}>\n      <LogBoxButton\n        onPress={props.onPressOpen}\n        style={toastStyles.press}\n        backgroundColor={{\n          default: LogBoxStyle.getBackgroundColor(1),\n          pressed: LogBoxStyle.getBackgroundColor(0.9),\n        }}>\n        <View style={toastStyles.content}>\n          <CountBadge count={totalLogCount} level={level} />\n          <Message message={log.message} />\n          <DismissButton onPress={props.onPressDismiss} />\n        </View>\n      </LogBoxButton>\n    </View>\n  );\n}\n\nfunction CountBadge(props) {\n  return (\n    <View style={countStyles.outside}>\n      {/* $FlowFixMe(>=0.114.0) This suppression was added when fixing the type\n       * of `StyleSheet.create`. Remove this comment to see the error. */}\n      <View style={[countStyles.inside, countStyles[props.level]]}>\n        <Text style={countStyles.text}>\n          {props.count <= 1 ? '!' : props.count}\n        </Text>\n      </View>\n    </View>\n  );\n}\n\nfunction Message(props) {\n  return (\n    <View style={messageStyles.container}>\n      <Text numberOfLines={1} style={messageStyles.text}>\n        {props.message && (\n          <LogBoxMessage\n            plaintext\n            message={props.message}\n            style={messageStyles.substitutionText}\n          />\n        )}\n      </Text>\n    </View>\n  );\n}\n\nfunction DismissButton(props) {\n  return (\n    <View style={dismissStyles.container}>\n      <LogBoxButton\n        backgroundColor={{\n          default: LogBoxStyle.getTextColor(0.3),\n          pressed: LogBoxStyle.getTextColor(0.5),\n        }}\n        hitSlop={{\n          top: 12,\n          right: 10,\n          bottom: 12,\n          left: 10,\n        }}\n        onPress={props.onPress}\n        style={dismissStyles.press}>\n        <Image\n          source={require('./LogBoxImages/close.png')}\n          style={dismissStyles.image}\n        />\n      </LogBoxButton>\n    </View>\n  );\n}\n\nconst countStyles = StyleSheet.create({\n  warn: {\n    backgroundColor: LogBoxStyle.getWarningColor(1),\n  },\n  error: {\n    backgroundColor: LogBoxStyle.getErrorColor(1),\n  },\n  log: {\n    backgroundColor: LogBoxStyle.getLogColor(1),\n  },\n  outside: {\n    padding: 2,\n    borderRadius: 25,\n    backgroundColor: '#fff',\n    marginRight: 8,\n  },\n  inside: {\n    minWidth: 18,\n    paddingLeft: 4,\n    paddingRight: 4,\n    borderRadius: 25,\n    fontWeight: '600',\n  },\n  text: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    lineHeight: 18,\n    textAlign: 'center',\n    fontWeight: '600',\n    textShadowColor: LogBoxStyle.getBackgroundColor(0.4),\n    textShadowOffset: {width: 0, height: 0},\n    textShadowRadius: 3,\n  },\n});\n\nconst messageStyles = StyleSheet.create({\n  container: {\n    alignSelf: 'stretch',\n    flexGrow: 1,\n    flexShrink: 1,\n    flexBasis: 'auto',\n    borderLeftColor: LogBoxStyle.getTextColor(0.2),\n    borderLeftWidth: 1,\n    paddingLeft: 8,\n  },\n  text: {\n    color: LogBoxStyle.getTextColor(1),\n    flex: 1,\n    fontSize: 14,\n    lineHeight: 22,\n  },\n  substitutionText: {\n    color: LogBoxStyle.getTextColor(0.6),\n  },\n});\n\nconst dismissStyles = StyleSheet.create({\n  container: {\n    alignSelf: 'center',\n    flexDirection: 'row',\n    flexGrow: 0,\n    flexShrink: 0,\n    flexBasis: 'auto',\n    marginLeft: 5,\n  },\n  press: {\n    height: 20,\n    width: 20,\n    borderRadius: 25,\n    alignSelf: 'flex-end',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  image: {\n    height: 8,\n    width: 8,\n    tintColor: LogBoxStyle.getBackgroundColor(1),\n  },\n});\n\nconst toastStyles = StyleSheet.create({\n  container: {\n    height: 48,\n    position: 'relative',\n    width: '100%',\n    justifyContent: 'center',\n    marginTop: 0.5,\n    backgroundColor: LogBoxStyle.getTextColor(1),\n  },\n  press: {\n    height: 48,\n    position: 'relative',\n    width: '100%',\n    justifyContent: 'center',\n    marginTop: 0.5,\n    paddingHorizontal: 12,\n  },\n  content: {\n    alignItems: 'flex-start',\n    flexDirection: 'row',\n    borderRadius: 8,\n    flexGrow: 0,\n    flexShrink: 0,\n    flexBasis: 'auto',\n  },\n});\n\nexport default LogBoxLogNotification;\n"]},"metadata":{},"sourceType":"module"}