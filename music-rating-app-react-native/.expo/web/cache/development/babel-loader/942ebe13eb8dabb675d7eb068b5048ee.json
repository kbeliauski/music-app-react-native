{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/kirylbeliauski/Documents/COMP SCI/software engineering/hw4/actual hw/music-rating-app-react-native/components/RatingForm.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Actions } from 'react-native-router-flux';\nimport { createNativeStackNavigator } from 'react-native-screens/native-stack';\nimport axios from 'axios';\nimport AuthService from \"./Authentication\";\nimport authHeader from \"./Auth-Header\";\nimport * as SecureStore from 'expo-secure-store';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nvar reg_url = \"http://localhost:8000/\";\n\nvar RatingForm = function (_Component) {\n  _inherits(RatingForm, _Component);\n\n  var _super = _createSuper(RatingForm);\n\n  function RatingForm(props) {\n    var _this;\n\n    _classCallCheck(this, RatingForm);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      username: '',\n      password: '',\n      rating: '',\n      error: ''\n    };\n    return _this;\n  }\n\n  _createClass(RatingForm, [{\n    key: \"onUsernameChange\",\n    value: function onUsernameChange(text) {\n      this.setState({\n        username: text\n      });\n    }\n  }, {\n    key: \"onPasswordChange\",\n    value: function onPasswordChange(text) {\n      this.setState({\n        password: text\n      });\n    }\n  }, {\n    key: \"onRatingChange\",\n    value: function onRatingChange(text) {\n      this.setState({\n        rating: text\n      });\n    }\n  }, {\n    key: \"handleRequest\",\n    value: function handleRequest() {\n      var _this2 = this;\n\n      var e = false;\n      AuthService.login(this.state.username, this.state.password).then(function () {\n        _this2.props.navigation.navigate(\"Home\");\n      }).catch(function (e) {\n        console.log(e);\n        Alert.alert(\"Wrong username or password\", \"Such user doesn't exist or fields were filled out incorrectly.\\\n            \\nPlease try again, filling out each field without special characters\", [{\n          text: \"OK\",\n          onPress: function onPress() {\n            return console.log(\"OK Pressed\");\n          }\n        }]);\n      });\n    }\n  }, {\n    key: \"renderButton\",\n    value: function renderButton() {\n      var buttonText = 'Add Rating';\n      return React.createElement(Button, {\n        title: buttonText,\n        onPress: this.handleRequest.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var formContainerStyle = style.formContainerStyle,\n          fieldStyle = style.fieldStyle,\n          textInputStyle = style.textInputStyle,\n          buttonContainerStyle = style.buttonContainerStyle,\n          accountCreateContainerStyle = style.accountCreateContainerStyle;\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: formContainerStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: fieldStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"rating\",\n        autoCorrect: false,\n        autoCapitalize: \"none\",\n        onChangeText: this.onRatingChange.bind(this),\n        style: textInputStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }))), React.createElement(View, {\n        style: buttonContainerStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }\n      }, this.renderButton()));\n    }\n  }]);\n\n  return RatingForm;\n}(Component);\n\nvar style = StyleSheet.create({\n  formContainerStyle: {\n    backgroundColor: '#E8EAED',\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 20\n  },\n  textInputStyle: {\n    backgroundColor: '#FFF',\n    padding: 15,\n    borderRadius: 10,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: 20,\n    flex: 1\n  },\n  fieldStyle: {\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  buttonContainerStyle: {\n    backgroundColor: '#FFF',\n    padding: 30,\n    borderRadius: 10,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: 50\n  },\n  accountCreateTextStyle: {\n    color: 'black'\n  },\n  accountCreateContainerStyle: {\n    padding: 25,\n    alignItems: 'center'\n  }\n});\nexport default RatingForm;","map":{"version":3,"sources":["/Users/kirylbeliauski/Documents/COMP SCI/software engineering/hw4/actual hw/music-rating-app-react-native/components/RatingForm.js"],"names":["React","Component","Actions","createNativeStackNavigator","axios","AuthService","authHeader","SecureStore","NavigationContainer","createStackNavigator","reg_url","RatingForm","props","state","username","password","rating","error","text","setState","e","login","then","navigation","navigate","catch","console","log","Alert","alert","onPress","buttonText","handleRequest","bind","formContainerStyle","style","fieldStyle","textInputStyle","buttonContainerStyle","accountCreateContainerStyle","flex","backgroundColor","onRatingChange","renderButton","StyleSheet","create","flexDirection","alignItems","justifyContent","paddingHorizontal","padding","borderRadius","marginBottom","accountCreateTextStyle","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, View, Text, TextInput, StyleSheet, Alert } from 'react-native';\nimport { Actions } from 'react-native-router-flux';\nimport { createNativeStackNavigator } from 'react-native-screens/native-stack';\nimport axios from 'axios';\nimport AuthService from \"./Authentication\";\nimport authHeader from './Auth-Header';\nimport * as SecureStore from 'expo-secure-store';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nconst reg_url = \"http://localhost:8000/\";\n\nclass RatingForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            password: '',\n            rating: '',\n            error: ''\n          }\n    }\n          \n    \n        \n      \n      \n\n  onUsernameChange(text) {\n    this.setState({ username: text });\n  }\n\n  onPasswordChange(text) {\n    this.setState({ password: text });\n\n  }\n  onRatingChange(text) {\n    this.setState({ rating: text });\n  }\n\n  handleRequest() {\n        var e = false\n        AuthService.login(this.state.username, this.state.password).then(() =>{\n            this.props.navigation.navigate(\"Home\")\n\n        })\n        .catch((e) => {\n          console.log(e);\n          Alert.alert(\n            \"Wrong username or password\",\n            \"Such user doesn't exist or fields were filled out incorrectly.\\\n            \\nPlease try again, filling out each field without special characters\",\n            [\n              { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n            ]\n          );\n        })\n    }\n        \n    \n    \n\n\n  renderButton() {\n    const buttonText = 'Add Rating';\n\n    return (\n      <Button title={buttonText} onPress={this.handleRequest.bind(this)}/>\n    );\n  }\n\n  render() {\n    const {\n      formContainerStyle,\n      fieldStyle,\n      textInputStyle,\n      buttonContainerStyle,\n      accountCreateContainerStyle\n    } = style;\n\n    \n\n    return (\n      <View style={{ flex: 1, backgroundColor: 'white' }}>\n        <View style={formContainerStyle}>\n          <View style={fieldStyle}>\n            <TextInput\n              placeholder=\"rating\"\n              autoCorrect={false}\n              autoCapitalize=\"none\"\n              onChangeText={this.onRatingChange.bind(this)}\n              style={textInputStyle}\n            />\n          </View>\n        </View>\n        <View style={buttonContainerStyle}>\n          {this.renderButton()}\n        </View>\n      </View>\n    );\n  }\n}\n\n\nconst style = StyleSheet.create({\n  formContainerStyle: {\n\n    backgroundColor: '#E8EAED',\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 20,\n  },\n  textInputStyle: {\n    backgroundColor: '#FFF',\n    padding: 15,\n    borderRadius: 10,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: 20,\n    flex: 1,\n  },\n  fieldStyle: {\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  buttonContainerStyle: {\n    backgroundColor: '#FFF',\n    padding: 30,\n    borderRadius: 10,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: 50,\n  },\n  accountCreateTextStyle: {\n    color: 'black'\n  },\n  accountCreateContainerStyle: {\n    padding: 25,\n    alignItems: 'center'\n  }\n});\n\n\nexport default RatingForm;"]},"metadata":{},"sourceType":"module"}