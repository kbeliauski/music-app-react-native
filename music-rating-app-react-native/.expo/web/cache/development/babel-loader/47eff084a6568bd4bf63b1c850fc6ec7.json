{"ast":null,"code":"var _jsxFileName = \"/Users/kirylbeliauski/Documents/COMP SCI/software engineering/hw4/actual hw/music-rating-app-react-native/components/Router.js\";\nimport 'react-native-gesture-handler';\nimport React, { Component } from 'react';\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport Home from \"./Home.js\";\nimport LoginOrCreateForm from \"./LoginOrCreateForm\";\nimport * as SecureStore from 'expo-secure-store';\nimport { createNativeStackNavigator } from 'react-native-screens/native-stack';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport AuthService from \"./Authentication\";\nimport authHeader from \"./Auth-Header\";\nimport SongList from \"./SongList\";\nimport RatingForm from \"./RatingForm\";\nvar Stack = createNativeStackNavigator();\n\nfunction Router() {\n  var _this = this;\n\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    key: \"login\",\n    name: \"Log In\",\n    options: {\n      headerLargeTitle: true,\n      title: \"Log In\",\n      backButtonInCustomView: false\n    },\n    component: Login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    options: function options(_ref) {\n      var navigation = _ref.navigation,\n          route = _ref.route;\n      return {\n        headerLargeTitle: true,\n        title: \"Song Ratings\",\n        headerHideBackButton: true,\n        headerRight: function headerRight() {\n          return React.createElement(Button, {\n            onPress: function onPress() {\n              navigation.navigate(\"Log In\");\n              AuthService.logout();\n              console.log(AuthService.getCurrentUser());\n            },\n            title: \"Log Out\",\n            color: \"#8C1941\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 19\n            }\n          });\n        }\n      };\n    },\n    name: \"Home\",\n    key: \"main\",\n    type: \"reset\",\n    component: Home,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Register\",\n    component: Register,\n    options: {\n      headerLargeTitle: true,\n      title: \"Register\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"SongList\",\n    component: SongList,\n    options: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"RatingForm\",\n    component: RatingForm,\n    options: {\n      headerLargeTitle: true,\n      title: \"Rate the Song\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Router;","map":{"version":3,"sources":["/Users/kirylbeliauski/Documents/COMP SCI/software engineering/hw4/actual hw/music-rating-app-react-native/components/Router.js"],"names":["React","Component","Login","Register","Home","LoginOrCreateForm","SecureStore","createNativeStackNavigator","NavigationContainer","AuthService","authHeader","SongList","RatingForm","Stack","Router","headerLargeTitle","title","backButtonInCustomView","navigation","route","headerHideBackButton","headerRight","navigate","logout","console","log","getCurrentUser"],"mappings":";AAAA,OAAO,8BAAP;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP;AACA,OAAOC,QAAP;AACA,OAAOC,IAAP;AACA,OAAOC,iBAAP;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AACA,SAASC,0BAAT,QAA2C,mCAA3C;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,WAAP;AACA,OAAOC,UAAP;AACA,OAAOC,QAAP;AACA,OAAOC,UAAP;AAGA,IAAMC,KAAK,GAAGN,0BAA0B,EAAxC;;AAIA,SAASO,MAAT,GAAkB;AAAA;;AAChB,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AACI,IAAA,GAAG,EAAG,OADV;AAEI,IAAA,IAAI,EAAC,QAFT;AAGI,IAAA,OAAO,EAAI;AACTC,MAAAA,gBAAgB,EAAE,IADT;AAETC,MAAAA,KAAK,EAAE,QAFE;AAGTC,MAAAA,sBAAsB,EAAE;AAHf,KAHf;AAOI,IAAA,SAAS,EAAEf,KAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE,oBAAC,KAAD,CAAO,MAAP;AACI,IAAA,OAAO,EAAK;AAAA,UACVgB,UADU,QACVA,UADU;AAAA,UAEVC,KAFU,QAEVA,KAFU;AAAA,aAEG;AACXJ,QAAAA,gBAAgB,EAAE,IADP;AAEXC,QAAAA,KAAK,EAAE,cAFI;AAGXI,QAAAA,oBAAoB,EAAE,IAHX;AAIXC,QAAAA,WAAW,EAAE;AAAA,iBACX,oBAAC,MAAD;AACE,YAAA,OAAO,EAAE,mBAAM;AACbH,cAAAA,UAAU,CAACI,QAAX,CAAoB,QAApB;AACAb,cAAAA,WAAW,CAACc,MAAZ;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAYhB,WAAW,CAACiB,cAAZ,EAAZ;AACD,aALH;AAOE,YAAA,KAAK,EAAC,SAPR;AAQE,YAAA,KAAK,EAAC,SARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADW;AAAA;AAJF,OAFH;AAAA,KADhB;AAqBI,IAAA,IAAI,EAAC,MArBT;AAsBI,IAAA,GAAG,EAAC,MAtBR;AAuBI,IAAA,IAAI,EAAC,OAvBT;AAwBI,IAAA,SAAS,EAAEtB,IAxBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAoCE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAG,UADT;AAEE,IAAA,SAAS,EAAID,QAFf;AAGE,IAAA,OAAO,EAAI;AACTY,MAAAA,gBAAgB,EAAE,IADT;AAETC,MAAAA,KAAK,EAAE;AAFE,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApCF,EA8CE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAG,UADT;AAEE,IAAA,SAAS,EAAIL,QAFf;AAGE,IAAA,OAAO,EAAI,EAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9CF,EAqDE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAG,YADT;AAEE,IAAA,SAAS,EAAIC,UAFf;AAGE,IAAA,OAAO,EAAI;AACTG,MAAAA,gBAAgB,EAAE,IADT;AAEPC,MAAAA,KAAK,EAAE;AAFA,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArDF,CADF,CADF;AAoED;;AAED,eAAeF,MAAf","sourcesContent":["import 'react-native-gesture-handler';\nimport React, {Component} from 'react';\nimport Login from './Login';\nimport Register from './Register';\nimport Home from './Home.js';\nimport LoginOrCreateForm from \"./LoginOrCreateForm\"\nimport * as SecureStore from 'expo-secure-store';\nimport { createNativeStackNavigator } from 'react-native-screens/native-stack';\nimport { Button } from 'react-native'\nimport { NavigationContainer } from '@react-navigation/native';\nimport AuthService from \"./Authentication\"\nimport authHeader from './Auth-Header';\nimport SongList from \"./SongList\";\nimport RatingForm from './RatingForm';\n\n\nconst Stack = createNativeStackNavigator();\n\n\n\nfunction Router() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen \n            key = \"login\"\n            name=\"Log In\" \n            options = {{ \n              headerLargeTitle: true, \n              title: \"Log In\" , \n              backButtonInCustomView: false}}\n            component={Login}\n          />\n        <Stack.Screen\n            options = { ({ \n              navigation,\n              route }) => ({\n                headerLargeTitle: true, \n                title: \"Song Ratings\", \n                headerHideBackButton: true,\n                headerRight: () => (\n                  <Button\n                    onPress={() => {\n                      navigation.navigate(\"Log In\")\n                      AuthService.logout()\n                      console.log(AuthService.getCurrentUser())\n                    }\n                    }\n                    title=\"Log Out\"\n                    color=\"#8C1941\"\n                  />\n                ),\n              })\n            }\n            name=\"Home\"\n            key=\"main\"\n            type=\"reset\"\n            component={Home}\n          />\n        <Stack.Screen\n          name = \"Register\"\n          component = {Register}\n          options = {{\n            headerLargeTitle: true, \n            title: \"Register\", \n          }}\n        \n          \n        />\n        <Stack.Screen\n          name = \"SongList\"\n          component = {SongList}\n          options = {{\n          }}\n          \n        />\n        <Stack.Screen\n          name = \"RatingForm\"\n          component = {RatingForm}\n          options = {{\n            headerLargeTitle: true, \n              title: \"Rate the Song\" ,\n          }}\n          \n        />\n\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nexport default Router;\n\n\n"]},"metadata":{},"sourceType":"module"}