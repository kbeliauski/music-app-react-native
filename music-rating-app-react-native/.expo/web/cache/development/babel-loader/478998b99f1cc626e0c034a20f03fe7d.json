{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _readOnlyError from \"@babel/runtime/helpers/readOnlyError\";\nvar _jsxFileName = \"/Users/kirylbeliauski/Documents/COMP SCI/software engineering/hw4/actual hw/music-rating-app-react-native/components/SongList.js\";\nimport React, { useState, useEffect } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Song from \"./Song\";\nimport Home from \"./Home\";\nexport default function SongList() {\n  var _this = this;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      song = _useState2[0],\n      setSong = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      artist = _useState4[0],\n      setArtist = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      rating = _useState6[0],\n      setRating = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      songItems = _useState8[0],\n      setSongItems = _useState8[1];\n\n  var _useState9 = useState(1),\n      _useState10 = _slicedToArray(_useState9, 2),\n      count = _useState10[0],\n      setCount = _useState10[1];\n\n  var handleAddSong = function handleAddSong() {\n    Keyboard.dismiss();\n    setSongItems([].concat(_toConsumableArray(songItems), [song]));\n    setSong(null);\n  };\n\n  var completeSong = function completeSong(index) {\n    var itemsCopy = _toConsumableArray(songItems);\n\n    itemsCopy.splice(index, 1);\n    setSongItems(itemsCopy);\n  };\n\n  var songDetails = function songDetails() {\n    switch (count) {\n      case 1:\n        return React.createElement(TextInput, {\n          style: styles.input,\n          placeholder: 'Write a song name',\n          value: song,\n          onChangeText: function onChangeText(text) {\n            return setSong(text);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 20\n          }\n        });\n\n      case 2:\n        return React.createElement(TextInput, {\n          style: styles.input,\n          placeholder: 'Now, this song`s artist',\n          value: artist,\n          onChangeText: function onChangeText(text) {\n            return setArtist(text);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 20\n          }\n        });\n\n      case 3:\n        return React.createElement(TextInput, {\n          style: styles.input,\n          placeholder: 'Now, it`s rating',\n          value: rating,\n          onChangeText: function onChangeText(text) {\n            return setRating(text);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 20\n          }\n        });\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    contentContainerStyle: {\n      flexGrow: 1\n    },\n    keyboardShouldPersistTaps: \"handled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.songsWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, songItems.map(function (item, index) {\n    return React.createElement(TouchableOpacity, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, React.createElement(Song, {\n      song_name: item,\n      index: index,\n      touchSquare: completeSong,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }\n    }));\n  })))), React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    style: styles.writeSongWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, songDetails()), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      if (count > 3) {\n        setCount(1);\n      }\n\n      handleAddSong();\n      setCount((count + 1, _readOnlyError(\"count\")));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.addWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.addText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"+\")))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#E8EAED'\n  },\n  songsWrapper: {\n    paddingHorizontal: 20\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  items: {\n    marginTop: 30\n  },\n  writeSongWrapper: {\n    position: 'absolute',\n    bottom: 60,\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  },\n  input: {\n    paddingVertical: 15,\n    paddingHorizontal: 15,\n    backgroundColor: '#FFF',\n    borderRadius: 60,\n    borderColor: '#C0C0C0',\n    borderWidth: 1,\n    width: 250\n  },\n  addWrapper: {\n    width: 60,\n    height: 60,\n    backgroundColor: '#FFF',\n    borderRadius: 60,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: '#C0C0C0',\n    borderWidth: 1\n  },\n  addText: {}\n});","map":{"version":3,"sources":["/Users/kirylbeliauski/Documents/COMP SCI/software engineering/hw4/actual hw/music-rating-app-react-native/components/SongList.js"],"names":["React","useState","useEffect","Song","Home","SongList","song","setSong","artist","setArtist","rating","setRating","songItems","setSongItems","count","setCount","handleAddSong","Keyboard","dismiss","completeSong","index","itemsCopy","splice","songDetails","styles","input","text","container","flexGrow","songsWrapper","items","map","item","Platform","OS","writeSongWrapper","addWrapper","addText","StyleSheet","create","flex","backgroundColor","paddingHorizontal","sectionTitle","fontSize","fontWeight","marginTop","position","bottom","width","flexDirection","justifyContent","alignItems","paddingVertical","borderRadius","borderColor","borderWidth","height"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { KeyboardAvoidingView, StyleSheet, Text, View, TextInput, TouchableOpacity, Keyboard, ScrollView } from 'react-native';\nimport Song from './Song';\nimport Home from './Home'\n\nexport default function SongList() {\n  const [song, setSong] = useState();\n  const [artist, setArtist] = useState();\n  const [rating, setRating] = useState();\n  const [songItems, setSongItems] = useState([]);\n  const [count, setCount] = useState(1)\n\n\n  const handleAddSong = () => {\n    Keyboard.dismiss();\n\n        setSongItems([...songItems, song])\n        setSong(null);\n    \n  }\n\n  const completeSong = (index) => {\n    let itemsCopy = [...songItems];\n    itemsCopy.splice(index, 1);\n    setSongItems(itemsCopy)\n  }\n\n  const songDetails = () => {\n      switch (count) {\n        case 1 :\n            return <TextInput style={styles.input} placeholder={'Write a song name'} value={song} onChangeText={text => setSong(text)} />;\n        case 2: \n            return <TextInput style={styles.input} placeholder={'Now, this song`s artist'} value={artist} onChangeText={text => setArtist(text)} />;\n        case 3: \n            return <TextInput style={styles.input} placeholder={'Now, it`s rating'} value={rating} onChangeText={text => setRating(text)} />;\n      }\n  }\n\n  return (\n    <View style={styles.container}>\n      {/* Added this scroll view to enable scrolling when list gets longer than the page */}\n      <ScrollView\n        contentContainerStyle={{\n          flexGrow: 1\n        }}\n        keyboardShouldPersistTaps='handled'\n      >\n\n      {/* Songs */}\n      <View style={styles.songsWrapper}>\n        <View style={styles.items}>\n          {/* This is where the songs will go! */}\n          {\n            songItems.map((item, index) => {\n              return (\n                <TouchableOpacity >\n                  <Song song_name={item} index={index} touchSquare={completeSong}/> \n                </TouchableOpacity>\n              )\n            })\n          }\n        </View>\n      </View>\n        \n      </ScrollView>\n\n      {/* Write a song */}\n      {/* Uses a keyboard avoiding view which ensures the keyboard does not cover the items on screen */}\n      <KeyboardAvoidingView \n        behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n        style={styles.writeSongWrapper}\n      >\n          <View>{songDetails()}</View>\n        \n        <TouchableOpacity onPress={() => {\n            if (count > 3) {\n                setCount(1)\n                //add the song to the server\n            }\n            handleAddSong()\n            setCount(count += 1)\n        }}>\n          <View style={styles.addWrapper}>\n            <Text style={styles.addText}>+</Text>\n          </View>\n        </TouchableOpacity>\n      </KeyboardAvoidingView>\n      \n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#E8EAED',\n  },\n  songsWrapper: {\n    paddingHorizontal: 20,\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  items: {\n    marginTop: 30,\n  },\n  writeSongWrapper: {\n    position: 'absolute',\n    bottom: 60,\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  },\n  input: {\n    paddingVertical: 15,\n    paddingHorizontal: 15,\n    backgroundColor: '#FFF',\n    borderRadius: 60,\n    borderColor: '#C0C0C0',\n    borderWidth: 1,\n    width: 250,\n  },\n  addWrapper: {\n    width: 60,\n    height: 60,\n    backgroundColor: '#FFF',\n    borderRadius: 60,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: '#C0C0C0',\n    borderWidth: 1,\n  },\n  addText: {},\n});\n"]},"metadata":{},"sourceType":"module"}