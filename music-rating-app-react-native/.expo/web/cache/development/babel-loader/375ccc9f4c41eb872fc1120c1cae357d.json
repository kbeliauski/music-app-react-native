{"ast":null,"code":"'use strict';\n\nvar _jsxFileName = \"/Users/kirylbeliauski/Documents/COMP SCI/software engineering/hw4/actual hw/music-rating-app-react-native/node_modules/react-native/Libraries/LogBox/LogBoxNotificationContainer.js\";\nimport * as React from 'react';\nimport StyleSheet from \"../StyleSheet/StyleSheet\";\nimport View from \"../Components/View/View\";\nimport * as LogBoxData from \"./Data/LogBoxData\";\nimport LogBoxLog from \"./Data/LogBoxLog\";\nimport LogBoxLogNotification from \"./UI/LogBoxNotification\";\nexport function _LogBoxNotificationContainer(props) {\n  var logs = props.logs;\n\n  var onDismissWarns = function onDismissWarns() {\n    LogBoxData.clearWarnings();\n  };\n\n  var onDismissErrors = function onDismissErrors() {\n    LogBoxData.clearErrors();\n  };\n\n  var setSelectedLog = function setSelectedLog(index) {\n    LogBoxData.setSelectedLog(index);\n  };\n\n  function openLog(log) {\n    var index = logs.length - 1;\n\n    while (index > 0 && logs[index] !== log) {\n      index -= 1;\n    }\n\n    setSelectedLog(index);\n  }\n\n  if (logs.length === 0 || props.isDisabled === true) {\n    return null;\n  }\n\n  var warnings = logs.filter(function (log) {\n    return log.level === 'warn';\n  });\n  var errors = logs.filter(function (log) {\n    return log.level === 'error' || log.level === 'fatal';\n  });\n  return React.createElement(View, {\n    style: styles.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, warnings.length > 0 && React.createElement(View, {\n    style: styles.toast,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, React.createElement(LogBoxLogNotification, {\n    log: warnings[warnings.length - 1],\n    level: \"warn\",\n    totalLogCount: warnings.length,\n    onPressOpen: function onPressOpen() {\n      return openLog(warnings[warnings.length - 1]);\n    },\n    onPressDismiss: onDismissWarns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  })), errors.length > 0 && React.createElement(View, {\n    style: styles.toast,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, React.createElement(LogBoxLogNotification, {\n    log: errors[errors.length - 1],\n    level: \"error\",\n    totalLogCount: errors.length,\n    onPressOpen: function onPressOpen() {\n      return openLog(errors[errors.length - 1]);\n    },\n    onPressDismiss: onDismissErrors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  list: {\n    bottom: 20,\n    left: 10,\n    right: 10,\n    position: 'absolute'\n  },\n  toast: {\n    borderRadius: 8,\n    marginBottom: 5,\n    overflow: 'hidden'\n  }\n});\nexport default LogBoxData.withSubscription(_LogBoxNotificationContainer);","map":{"version":3,"sources":["/Users/kirylbeliauski/Documents/COMP SCI/software engineering/hw4/actual hw/music-rating-app-react-native/node_modules/react-native/Libraries/LogBox/LogBoxNotificationContainer.js"],"names":["React","StyleSheet","View","LogBoxData","LogBoxLog","LogBoxLogNotification","_LogBoxNotificationContainer","props","logs","onDismissWarns","clearWarnings","onDismissErrors","clearErrors","setSelectedLog","index","openLog","log","length","isDisabled","warnings","filter","level","errors","styles","list","toast","create","bottom","left","right","position","borderRadius","marginBottom","overflow","withSubscription"],"mappings":"AAUA;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP;AACA,OAAOC,IAAP;AACA,OAAO,KAAKC,UAAZ;AACA,OAAOC,SAAP;AACA,OAAOC,qBAAP;AAQA,OAAO,SAASC,4BAAT,CAAsCC,KAAtC,EAAgE;AACrE,MAAOC,IAAP,GAAeD,KAAf,CAAOC,IAAP;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BN,IAAAA,UAAU,CAACO,aAAX;AACD,GAFD;;AAGA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5BR,IAAAA,UAAU,CAACS,WAAX;AACD,GAFD;;AAIA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAyB;AAC9CX,IAAAA,UAAU,CAACU,cAAX,CAA0BC,KAA1B;AACD,GAFD;;AAIA,WAASC,OAAT,CAAiBC,GAAjB,EAAiC;AAC/B,QAAIF,KAAK,GAAGN,IAAI,CAACS,MAAL,GAAc,CAA1B;;AAGA,WAAOH,KAAK,GAAG,CAAR,IAAaN,IAAI,CAACM,KAAD,CAAJ,KAAgBE,GAApC,EAAyC;AACvCF,MAAAA,KAAK,IAAI,CAAT;AACD;;AACDD,IAAAA,cAAc,CAACC,KAAD,CAAd;AACD;;AAED,MAAIN,IAAI,CAACS,MAAL,KAAgB,CAAhB,IAAqBV,KAAK,CAACW,UAAN,KAAqB,IAA9C,EAAoD;AAClD,WAAO,IAAP;AACD;;AAED,MAAMC,QAAQ,GAAGX,IAAI,CAACY,MAAL,CAAY,UAAAJ,GAAG;AAAA,WAAIA,GAAG,CAACK,KAAJ,KAAc,MAAlB;AAAA,GAAf,CAAjB;AACA,MAAMC,MAAM,GAAGd,IAAI,CAACY,MAAL,CACb,UAAAJ,GAAG;AAAA,WAAIA,GAAG,CAACK,KAAJ,KAAc,OAAd,IAAyBL,GAAG,CAACK,KAAJ,KAAc,OAA3C;AAAA,GADU,CAAf;AAGA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,QAAQ,CAACF,MAAT,GAAkB,CAAlB,IACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEM,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,qBAAD;AACE,IAAA,GAAG,EAAEN,QAAQ,CAACA,QAAQ,CAACF,MAAT,GAAkB,CAAnB,CADf;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,aAAa,EAAEE,QAAQ,CAACF,MAH1B;AAIE,IAAA,WAAW,EAAE;AAAA,aAAMF,OAAO,CAACI,QAAQ,CAACA,QAAQ,CAACF,MAAT,GAAkB,CAAnB,CAAT,CAAb;AAAA,KAJf;AAKE,IAAA,cAAc,EAAER,cALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,EAYGa,MAAM,CAACL,MAAP,GAAgB,CAAhB,IACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEM,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,qBAAD;AACE,IAAA,GAAG,EAAEH,MAAM,CAACA,MAAM,CAACL,MAAP,GAAgB,CAAjB,CADb;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,aAAa,EAAEK,MAAM,CAACL,MAHxB;AAIE,IAAA,WAAW,EAAE;AAAA,aAAMF,OAAO,CAACO,MAAM,CAACA,MAAM,CAACL,MAAP,GAAgB,CAAjB,CAAP,CAAb;AAAA,KAJf;AAKE,IAAA,cAAc,EAAEN,eALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAbJ,CADF;AA0BD;AAED,IAAMY,MAAM,GAAGtB,UAAU,CAACyB,MAAX,CAAkB;AAC/BF,EAAAA,IAAI,EAAE;AACJG,IAAAA,MAAM,EAAE,EADJ;AAEJC,IAAAA,IAAI,EAAE,EAFF;AAGJC,IAAAA,KAAK,EAAE,EAHH;AAIJC,IAAAA,QAAQ,EAAE;AAJN,GADyB;AAO/BL,EAAAA,KAAK,EAAE;AACLM,IAAAA,YAAY,EAAE,CADT;AAELC,IAAAA,YAAY,EAAE,CAFT;AAGLC,IAAAA,QAAQ,EAAE;AAHL;AAPwB,CAAlB,CAAf;AAcA,eAAgB9B,UAAU,CAAC+B,gBAAX,CACd5B,4BADc,CAAhB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport * as React from 'react';\nimport StyleSheet from '../StyleSheet/StyleSheet';\nimport View from '../Components/View/View';\nimport * as LogBoxData from './Data/LogBoxData';\nimport LogBoxLog from './Data/LogBoxLog';\nimport LogBoxLogNotification from './UI/LogBoxNotification';\n\ntype Props = $ReadOnly<{|\n  logs: $ReadOnlyArray<LogBoxLog>,\n  selectedLogIndex: number,\n  isDisabled?: ?boolean,\n|}>;\n\nexport function _LogBoxNotificationContainer(props: Props): React.Node {\n  const {logs} = props;\n\n  const onDismissWarns = () => {\n    LogBoxData.clearWarnings();\n  };\n  const onDismissErrors = () => {\n    LogBoxData.clearErrors();\n  };\n\n  const setSelectedLog = (index: number): void => {\n    LogBoxData.setSelectedLog(index);\n  };\n\n  function openLog(log: LogBoxLog) {\n    let index = logs.length - 1;\n\n    // Stop at zero because if we don't find any log, we'll open the first log.\n    while (index > 0 && logs[index] !== log) {\n      index -= 1;\n    }\n    setSelectedLog(index);\n  }\n\n  if (logs.length === 0 || props.isDisabled === true) {\n    return null;\n  }\n\n  const warnings = logs.filter(log => log.level === 'warn');\n  const errors = logs.filter(\n    log => log.level === 'error' || log.level === 'fatal',\n  );\n  return (\n    <View style={styles.list}>\n      {warnings.length > 0 && (\n        <View style={styles.toast}>\n          <LogBoxLogNotification\n            log={warnings[warnings.length - 1]}\n            level=\"warn\"\n            totalLogCount={warnings.length}\n            onPressOpen={() => openLog(warnings[warnings.length - 1])}\n            onPressDismiss={onDismissWarns}\n          />\n        </View>\n      )}\n      {errors.length > 0 && (\n        <View style={styles.toast}>\n          <LogBoxLogNotification\n            log={errors[errors.length - 1]}\n            level=\"error\"\n            totalLogCount={errors.length}\n            onPressOpen={() => openLog(errors[errors.length - 1])}\n            onPressDismiss={onDismissErrors}\n          />\n        </View>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  list: {\n    bottom: 20,\n    left: 10,\n    right: 10,\n    position: 'absolute',\n  },\n  toast: {\n    borderRadius: 8,\n    marginBottom: 5,\n    overflow: 'hidden',\n  },\n});\n\nexport default (LogBoxData.withSubscription(\n  _LogBoxNotificationContainer,\n): React.AbstractComponent<{||}>);\n"]},"metadata":{},"sourceType":"module"}